name: Test SciNode package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
        -   5672:5672
    strategy:
      matrix:
        python-version: ["3.10"]
        profile: ["builtin", "celery"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          sudo apt update && sudo apt install --no-install-recommends diffutils openssh-client openssh-server
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: '5.0'
          mongodb-replica-set: test-rs
          mongodb-port: 27017
      - name: Copy custom node file, add custom node path to sys path
        run: |
         mkdir ~/.scinode
         mkdir ~/.scinode/custom_node
         mkdir -p ~/scinode/remote
         cp tests/datas/sn_nodes.py ~/.scinode/custom_node/
         cp tests/datas/computer.json ~/.scinode/computer.json
         echo "PYTHONPATH=$PYTHONPATH:~/.scinode/custom_node/" >> $GITHUB_ENV
         echo $PYTHONPATH
         ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
      - name: Build
        run: |
          python3 setup.py install
      - name: Add profile
        run: |
          scinode profile add --file tests/datas/profile_${{ matrix.profile }}.json
          scinode profile use ${{ matrix.profile }}
      - name: Add and start scheduler and worker
        run: |
          scinode start
          scinode worker add --file tests/datas/worker_test.json
          scinode worker list
          scinode worker start test
          scinode worker status
      - name: Test with pytest
        run: |
          cd tests
          python3 -m pytest -s -v
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
